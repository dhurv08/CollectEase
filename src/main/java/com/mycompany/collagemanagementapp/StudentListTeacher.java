/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.collagemanagementapp;

import com.mycompany.collagemanagementapp.models.CourseModel;
import com.mycompany.collagemanagementapp.utilities.UserSession;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Kumra
 */

public class StudentListTeacher extends javax.swing.JFrame {
    int selectedUserId  = -1;
    ArrayList<Integer> idsList = new ArrayList<>();
    ArrayList<CourseModel> coursesList = new ArrayList<>();

    CourseModel selectedCourse ;
    /**
     * Creates new form UserList
     */
    public StudentListTeacher() {
        initComponents();
        fetchUserList();
        fetchCoursesList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlButtons = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        pnlDataEnter = new javax.swing.JPanel();
        lbSTudentName = new javax.swing.JLabel();
        lbDOB = new javax.swing.JLabel();
        tfStudentName = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        lbPhoneNumber = new javax.swing.JLabel();
        tfPhoneNumber = new javax.swing.JTextField();
        lnAdhaarNo = new javax.swing.JLabel();
        tfAdhaarNo = new javax.swing.JTextField();
        lbAddress = new javax.swing.JLabel();
        tfAddress = new javax.swing.JTextField();
        btnCLear = new javax.swing.JButton();
        registerDate = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        pnlButtons.setBackground(new java.awt.Color(204, 255, 204));
        pnlButtons.setPreferredSize(new java.awt.Dimension(10, 16));

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(0, 0, 0));

        pnlTable.setBackground(new java.awt.Color(153, 102, 0));

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 602, Short.MAX_VALUE)
            .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE))
        );

        pnlDataEnter.setBackground(new java.awt.Color(100, 130, 173));

        lbSTudentName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSTudentName.setText("Student Name");

        lbDOB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDOB.setText("DOB");

        tfStudentName.setEnabled(false);

        lbEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEmail.setText("Email");

        tfEmail.setEnabled(false);

        lbPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPhoneNumber.setText("Phone Number");

        tfPhoneNumber.setEnabled(false);

        lnAdhaarNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lnAdhaarNo.setText("Adhaar Number");

        tfAdhaarNo.setEnabled(false);

        lbAddress.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbAddress.setText("Address");

        tfAddress.setEnabled(false);

        btnCLear.setBackground(new java.awt.Color(226, 218, 214));
        btnCLear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCLear.setText("Clear");
        btnCLear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLearActionPerformed(evt);
            }
        });

        registerDate.setEnabled(false);

        btnBack.setBackground(new java.awt.Color(226, 218, 214));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDataEnterLayout = new javax.swing.GroupLayout(pnlDataEnter);
        pnlDataEnter.setLayout(pnlDataEnterLayout);
        pnlDataEnterLayout.setHorizontalGroup(
            pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataEnterLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCLear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lnAdhaarNo)
                            .addComponent(lbPhoneNumber)
                            .addComponent(lbDOB)
                            .addComponent(lbEmail)
                            .addComponent(lbAddress)
                            .addComponent(lbSTudentName))
                        .addGap(34, 34, 34)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfStudentName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(registerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfAdhaarNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        pnlDataEnterLayout.setVerticalGroup(
            pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnBack)
                .addGap(65, 65, 65)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSTudentName)
                    .addComponent(tfStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDOB)
                    .addComponent(registerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmail)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPhoneNumber))
                .addGap(26, 26, 26)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAdhaarNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lnAdhaarNo))
                .addGap(24, 24, 24)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAddress)
                    .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addComponent(btnCLear)
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDataEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDataEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        int selectedIndex = tblUser.getSelectedRow();
        selectedUserId= idsList.get(selectedIndex);
        System.out.println("selectedUserId= "+ selectedUserId);
        
        fetchStudentDetails();
        
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnCLearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLearActionPerformed
        selectedUserId = -1;
        fetchUserList();
        tfStudentName.setText("");
//        registerDate.setDate(null);
        tfEmail.setText("");
        tfPhoneNumber.setText("");
        tfAdhaarNo.setText("");
        tfAddress.setText("");
    }//GEN-LAST:event_btnCLearActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        DashboardTeacher dashboardTeacher = new DashboardTeacher();
        dashboardTeacher.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentListTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentListTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentListTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentListTeacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentListTeacher().setVisible(true);
            }
        });
    }



    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCLear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JLabel lbDOB;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbPhoneNumber;
    private javax.swing.JLabel lbSTudentName;
    private javax.swing.JLabel lnAdhaarNo;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlDataEnter;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTextField registerDate;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfAdhaarNo;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfPhoneNumber;
    private javax.swing.JTextField tfStudentName;
    // End of variables declaration//GEN-END:variables

    private void fetchUserList() {
        
         try {
            // register the driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            //create connection
            Connection conn = ConnectionUtil.getInstance();

            if (conn == null) {
                System.out.println("Connection error");
            } else {
                System.out.println("Connection established");
            }
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from studentlist");

            tblUser.setModel(DbUtils.resultSetToTableModel(rs));
            
                        ResultSet rs2 = st.executeQuery("select * from studentlist");
                                    while(rs2.next())
            {
               idsList.add(rs2.getInt("ID"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentListTeacher.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(StudentListTeacher.class.getName()).log(Level.SEVERE, null, ex);
}

}

    private void fetchStudentDetails() {
         try {
            
                        // creating a connection
                        Connection conn= ConnectionUtil.getInstance();
                        if(conn==null)
                        {
                                System.out.println("Connection error");
                            }
                        else{
                                System.out.println("Connection established");
                            }
            
                        PreparedStatement pst = conn.prepareStatement("Select * from studentlist where ID = ?");
                        pst.setInt(1, selectedUserId);
                        ResultSet rs = pst.executeQuery();
                        if(rs.next()){
                            
                                  
                            
                                  tfStudentName.setText(rs.getString("name"));
                                  registerDate.setText(rs.getString("DOB"));
                                  tfEmail.setText(rs.getString("email"));
                                  tfPhoneNumber.setText(rs.getString("phone_number"));
                                  tfAdhaarNo.setText(rs.getString("adhaar"));
                                  tfAddress.setText(rs.getString("address"));
//                                  cbCourseSelector.setEnabled(false);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(StudentListTeacher.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }

 private void fetchCoursesList() {
        
         try {
      
      
            //create connection
            Connection conn = ConnectionUtil.getInstance();

            if (conn == null) {
                System.out.println("Connection error");
            } else {
                System.out.println("Connection established");
            }
            Statement st = conn.createStatement();
//            ResultSet rs = st.executeQuery("select * from course");

   
            
                        ResultSet rs2 = st.executeQuery("select * from course");
                                    while(rs2.next())
            {
               CourseModel courseModel= new CourseModel(rs2.getInt("course_id"),rs2.getString("name"),rs2.getInt("total_fee"));
               coursesList.add(courseModel);
            }
            String [] arr = new String[coursesList.size()];
            int i=0;
             for (CourseModel c : coursesList) {
                 arr[i] = c.getId()+"-"+c.getName();
                 i++;
             }
//            cbCourseSelector.setModel(new DefaultComboBoxModel<>(arr));
            selectedCourse = coursesList.get(0);
        } catch (SQLException ex) {
            Logger.getLogger(StudentListTeacher.class.getName()).log(Level.SEVERE, null, ex);
}

}

}
