/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.collagemanagementapp;

import com.mycompany.collagemanagementapp.models.CourseModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Kumra
 */

public class UserListAdmin extends javax.swing.JFrame {
    int selectedUserId  = -1;
    ArrayList<Integer> idsList = new ArrayList<>();
    /**
     * Creates new form UserList
     */
    public UserListAdmin() {
        initComponents();
        fetchUserList();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlButtons = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        pnlDataEnter = new javax.swing.JPanel();
        lbSTudentName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        lbPhoneNumber = new javax.swing.JLabel();
        tfPassword = new javax.swing.JTextField();
        btnAddNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btmbackADMIN = new javax.swing.JButton();
        btnCLear = new javax.swing.JButton();
        cbUserType = new javax.swing.JComboBox<>();
        lbAddress1 = new javax.swing.JLabel();
        lbPhoneNumber1 = new javax.swing.JLabel();
        tfContact = new javax.swing.JTextField();

        pnlButtons.setBackground(new java.awt.Color(204, 255, 204));
        pnlButtons.setPreferredSize(new java.awt.Dimension(10, 16));

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(0, 0, 0));

        pnlTable.setBackground(new java.awt.Color(153, 102, 0));

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE))
        );

        pnlDataEnter.setBackground(new java.awt.Color(100, 130, 173));

        lbSTudentName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSTudentName.setText("Name");

        lbEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEmail.setText("Email");

        lbPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPhoneNumber.setText("Password");

        btnAddNew.setBackground(new java.awt.Color(226, 218, 214));
        btnAddNew.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddNew.setText("Add New");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(226, 218, 214));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(226, 218, 214));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btmbackADMIN.setBackground(new java.awt.Color(226, 218, 214));
        btmbackADMIN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btmbackADMIN.setText("Back");
        btmbackADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmbackADMINActionPerformed(evt);
            }
        });

        btnCLear.setBackground(new java.awt.Color(226, 218, 214));
        btnCLear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCLear.setText("Clear");
        btnCLear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLearActionPerformed(evt);
            }
        });

        cbUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Accountant" ,"Teacher" }));
        cbUserType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUserTypeItemStateChanged(evt);
            }
        });
        cbUserType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUserTypeActionPerformed(evt);
            }
        });

        lbAddress1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbAddress1.setText("User Type");

        lbPhoneNumber1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPhoneNumber1.setText("Contact");

        javax.swing.GroupLayout pnlDataEnterLayout = new javax.swing.GroupLayout(pnlDataEnter);
        pnlDataEnter.setLayout(pnlDataEnterLayout);
        pnlDataEnterLayout.setHorizontalGroup(
            pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPhoneNumber)
                            .addComponent(lbSTudentName)
                            .addComponent(lbEmail)
                            .addComponent(lbAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbPhoneNumber1))
                        .addGap(31, 31, 31)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfContact, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAddNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(17, 17, 17)
                        .addComponent(btnCLear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btmbackADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        pnlDataEnterLayout.setVerticalGroup(
            pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btmbackADMIN)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbSTudentName)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbEmail)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPhoneNumber)
                            .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbAddress1)
                            .addComponent(cbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addComponent(lbPhoneNumber1))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(78, 78, 78)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNew)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnCLear))
                .addGap(87, 87, 87))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDataEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDataEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        int selectedIndex = tblUser.getSelectedRow();
        selectedUserId= idsList.get(selectedIndex);
        System.out.println("selectedUserId= "+ selectedUserId);
        
        fetchUserDetails();
        
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(selectedUserId != -1)
        {
            try{
                Connection conn = ConnectionUtil.getInstance();
                PreparedStatement pst = conn.prepareStatement("delete from userlist where id=?");
                pst.setInt(1, selectedUserId);
                int status=pst.executeUpdate();
                if(status>0)
                {
                    fetchUserList();
                    selectedUserId=-1;
                }
            } catch (SQLException ex) {
                Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed

        try{
           Connection conn = ConnectionUtil.getInstance();
           PreparedStatement pst = conn.prepareStatement("Insert into userlist (name ,  email , password , contact , usertype) values ( ? ,?, ?, ?, ? )");
    
           pst.setString(1, this.tfName.getText());       
           pst.setString(2, this.tfEmail.getText());
           pst.setString(3, this.tfPassword.getText());
           pst.setString(4, this.tfContact.getText());
           pst.setString(5, cbUserType.getSelectedItem().toString());
   
           int status = pst.executeUpdate();
           if(status>0)
           {
               fetchUserList();
               selectedUserId = -1;
           }
          
       } catch (SQLException ex) {
            Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btmbackADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmbackADMINActionPerformed
        DashboardAdmin dashboardAdmin = new DashboardAdmin();
        dashboardAdmin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btmbackADMINActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:\
        try {
      
            // creating a connection
            Connection conn= ConnectionUtil.getInstance();
            if(conn==null)
            {
                System.out.println("Connection error");
            }
            else{
                System.out.println("Connection established");
            }
            
            PreparedStatement pst = conn.prepareStatement("update userlist set name=?, email=? , password = ? , contact = ? where id=?");
            pst.setString(1, tfName.getText().toString());
            pst.setString(2, tfEmail.getText().toString());
            pst.setString(3, tfPassword.getText());
            pst.setString(4, tfContact.getText());  
            pst.setInt(5, selectedUserId);

           pst.executeUpdate();
           fetchUserList();
                        
        } catch (SQLException ex) {
            Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCLearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLearActionPerformed
        selectedUserId = -1;
        fetchUserList();
        tfName.setText("");
        tfEmail.setText("");
        tfPassword.setText("");
        tfContact.setText("");

    }//GEN-LAST:event_btnCLearActionPerformed

    private void cbUserTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUserTypeItemStateChanged
        // TODO add your handling code here:
        

        
    }//GEN-LAST:event_cbUserTypeItemStateChanged

    private void cbUserTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUserTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUserTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserListAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserListAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserListAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserListAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserListAdmin().setVisible(true);
            }
        });
    }



    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btmbackADMIN;
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnCLear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbUserType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAddress1;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbPhoneNumber;
    private javax.swing.JLabel lbPhoneNumber1;
    private javax.swing.JLabel lbSTudentName;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlDataEnter;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField tfContact;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPassword;
    // End of variables declaration//GEN-END:variables

    private void fetchUserList() {
        
         try {
            // register the driver
      
            Connection conn = ConnectionUtil.getInstance();

            if (conn == null) {
                System.out.println("Connection error");
            } else {
                System.out.println("Connection established");
            }
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from userlist");

            tblUser.setModel(DbUtils.resultSetToTableModel(rs));
            
                        ResultSet rs2 = st.executeQuery("select * from userlist");
                                    while(rs2.next())
            {
               idsList.add(rs2.getInt("id"));
            }
        }  catch (SQLException ex) {
            Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
}

}

    private void fetchUserDetails() {
         try {
            
                        // creating a connection
                        Connection conn= ConnectionUtil.getInstance();
                        if(conn==null)
                        {
                                System.out.println("Connection error");
                            }
                        else{
                                System.out.println("Connection established");
                            }
            
                        PreparedStatement pst = conn.prepareStatement("Select * from userlist where id = ?");
                        pst.setInt(1, selectedUserId);
                        ResultSet rs = pst.executeQuery();
                        if(rs.next()){
                            
                                  
                            
                                  tfName.setText(rs.getString("name"));                               
                                  tfEmail.setText(rs.getString("email"));
                                  tfPassword.setText(rs.getString("password"));                                
                                  tfContact.setText(rs.getString("contact"));
                                 if(rs.getString("usertype").equalsIgnoreCase("Accountant")) 
                                     cbUserType.setSelectedIndex(0);
                                 else   cbUserType.setSelectedIndex(1);
                                  cbUserType.setEnabled(false);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }



}
