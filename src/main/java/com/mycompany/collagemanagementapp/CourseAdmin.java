/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.collagemanagementapp;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Kumra
 */
public class CourseAdmin extends javax.swing.JFrame {
   int selectedUserId= -1;
   ArrayList<Integer> idsList = new ArrayList<Integer>();
    /**
     * Creates new form CourseAdmin
     */
    public CourseAdmin() {
        initComponents();
        fetchUserList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlBage = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfDescription = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        tfDuration = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfTotalFees = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnAddNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCourses = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(0, 0, 0));

        pnlBage.setBackground(new java.awt.Color(100, 130, 173));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Course");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Descriprition");

        tfDescription.setColumns(20);
        tfDescription.setRows(5);
        jScrollPane1.setViewportView(tfDescription);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Duration");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Total Fees");

        btnUpdate.setBackground(new java.awt.Color(226, 218, 214));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAddNew.setBackground(new java.awt.Color(226, 218, 214));
        btnAddNew.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddNew.setText("Add New");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(226, 218, 214));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(226, 218, 214));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(226, 218, 214));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBageLayout = new javax.swing.GroupLayout(pnlBage);
        pnlBage.setLayout(pnlBageLayout);
        pnlBageLayout.setHorizontalGroup(
            pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(53, 53, 53)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlBageLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBageLayout.createSequentialGroup()
                        .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTotalFees, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(81, Short.MAX_VALUE))
                    .addGroup(pnlBageLayout.createSequentialGroup()
                        .addComponent(btnAddNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(31, 31, 31)
                        .addComponent(btnDelete)
                        .addGap(32, 32, 32)
                        .addComponent(btnClear)
                        .addContainerGap())))
        );
        pnlBageLayout.setVerticalGroup(
            pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBageLayout.createSequentialGroup()
                .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBageLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(pnlBageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)))
                .addGap(62, 62, 62)
                .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBageLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfTotalFees, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                        .addGroup(pnlBageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddNew)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnClear))
                        .addGap(83, 83, 83))
                    .addGroup(pnlBageLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        tbCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCourses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCoursesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbCourses);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlBage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed

        try{
            Connection conn = ConnectionUtil.getInstance();
            PreparedStatement pst = conn.prepareStatement("Insert into course (name , description , duration , total_fee) values ( ? ,?, ?, ?)");
            pst.setString(1, this.tfName.getText());
            pst.setString(2, tfDescription.getText());
            pst.setString(3, this.tfDuration.getText());
            pst.setString(4, this.tfTotalFees.getText());
           

            int status = pst.executeUpdate();
            if(status>0)
            {
                fetchUserList();
                selectedUserId = -1;
            }

        } catch (SQLException ex) {
            Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                try {
            
                        // creating a connection
                        Connection conn= ConnectionUtil.getInstance();
                        if(conn==null)
                        {
                                System.out.println("Connection error");
                            }
                        else{
                                System.out.println("Connection established");
                            }
            
                        PreparedStatement pst = conn.prepareStatement("Update course set name = ? , description = ? , duration = ? , total_fee = ? where course_id=?");
                        pst.setString(1, tfName.getText().toString());
                        pst.setString(2, tfDescription.getText().toString());
                        pst.setString(3, tfDuration.getText().toString());
                        pst.setString(4, tfTotalFees.getText().toString());
                        pst.setInt(5, selectedUserId);  
                        
                        pst.executeUpdate();
                        fetchUserList();
                    } catch (SQLException ex) {
                        Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbCoursesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCoursesMouseClicked
        int selectedIndex = tbCourses.getSelectedRow();
        selectedUserId= idsList.get(selectedIndex);
        System.out.println("selectedUserId= "+ selectedUserId);
        
        fetchCourseDetails(selectedUserId);

    }//GEN-LAST:event_tbCoursesMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         if(selectedUserId != -1)
        {
            try{
                Connection conn = ConnectionUtil.getInstance();
                PreparedStatement pst = conn.prepareStatement("delete from course where course_id=?");
                pst.setInt(1, selectedUserId);
                int status=pst.executeUpdate();
                if(status>0)
                {
                    fetchUserList();
                    selectedUserId=-1;
                }
            } catch (SQLException ex) {
                Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        selectedUserId = -1;
        fetchUserList();
            tfName.setText(null);
            tfDescription.setText(null);
            tfDuration.setText(null);
            tfTotalFees.setText(null);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        DashboardAdmin  dashboardAdmin = new DashboardAdmin();
        dashboardAdmin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlBage;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTable tbCourses;
    private javax.swing.JTextArea tfDescription;
    private javax.swing.JTextField tfDuration;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfTotalFees;
    // End of variables declaration//GEN-END:variables

    private void fetchUserList() {
               try {
            // register the driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            //create connection
            Connection conn = ConnectionUtil.getInstance();

            if (conn == null) {
                System.out.println("Connection error");
            } else {
                System.out.println("Connection established");
            }
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from course");

            tbCourses.setModel(DbUtils.resultSetToTableModel(rs));
            
                        ResultSet rs2 = st.executeQuery("select * from course");
                                    while(rs2.next())
            {
               idsList.add(rs2.getInt("course_id"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
}

}
    private void fetchCourseDetails(int selectedUserId) {
         try {
            
                        // creating a connection
                        Connection conn= ConnectionUtil.getInstance();
                        if(conn==null)
                        {
                                System.out.println("Connection error");
                            }
                        else{
                                System.out.println("Connection established");
                            }
            
                        PreparedStatement pst = conn.prepareStatement("Select * from course where course_id = ?");
                        pst.setInt(1, selectedUserId);
                        ResultSet rs = pst.executeQuery();
                        if(rs.next()){
                            
                            tfName.setText(rs.getString("name"));
                            tfDescription.setText(rs.getString("description"));
                            tfDuration.setText(rs.getString("duration"));
                            tfTotalFees.setText(rs.getString("total_fee"));
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(UserListAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
        
        
    }
    
}
