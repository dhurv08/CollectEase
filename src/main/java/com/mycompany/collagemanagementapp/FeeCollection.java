/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.collagemanagementapp;

import com.mycompany.collagemanagementapp.models.CourseModel;
import com.mycompany.collagemanagementapp.models.StudentModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Kumra
 */

public class FeeCollection extends javax.swing.JFrame {
    int selectedReceiptId  = -1;
    ArrayList<Integer> idsList = new ArrayList<>();
    ArrayList<StudentModel> studentsList = new ArrayList<>();

    StudentModel selectedStudent ;
    /**
     * Creates new form UserList
     */
    public FeeCollection() {
        initComponents();
        fetchFeeList();
        fetchStudentsList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlButtons = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        pnlDataEnter = new javax.swing.JPanel();
        lbSTudentName = new javax.swing.JLabel();
        lbDOB = new javax.swing.JLabel();
        tfStudentName = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        tfAmountPaid = new javax.swing.JTextField();
        lbPhoneNumber = new javax.swing.JLabel();
        tfComments = new javax.swing.JTextField();
        btnAddNew = new javax.swing.JButton();
        btmbackADMIN = new javax.swing.JButton();
        btnCLear = new javax.swing.JButton();
        tfFeeApplicable = new javax.swing.JTextField();
        cbStudentList = new javax.swing.JComboBox<>();
        lbAddress1 = new javax.swing.JLabel();
        lbDOB1 = new javax.swing.JLabel();
        tfFeePaid = new javax.swing.JTextField();
        lbDOB2 = new javax.swing.JLabel();
        tfFeeBalance = new javax.swing.JTextField();

        pnlButtons.setBackground(new java.awt.Color(204, 255, 204));
        pnlButtons.setPreferredSize(new java.awt.Dimension(10, 16));

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(0, 0, 0));

        pnlTable.setBackground(new java.awt.Color(153, 102, 0));

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 602, Short.MAX_VALUE)
            .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE))
        );

        pnlDataEnter.setBackground(new java.awt.Color(100, 130, 173));

        lbSTudentName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSTudentName.setText("Name");

        lbDOB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDOB.setText("Fee Applicable");

        tfStudentName.setEnabled(false);

        lbEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEmail.setText("Amount Paid");

        lbPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPhoneNumber.setText("Comments");

        btnAddNew.setBackground(new java.awt.Color(226, 218, 214));
        btnAddNew.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddNew.setText("Pay");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btmbackADMIN.setBackground(new java.awt.Color(226, 218, 214));
        btmbackADMIN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btmbackADMIN.setText("Back");
        btmbackADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmbackADMINActionPerformed(evt);
            }
        });

        btnCLear.setBackground(new java.awt.Color(226, 218, 214));
        btnCLear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCLear.setText("Clear");
        btnCLear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLearActionPerformed(evt);
            }
        });

        tfFeeApplicable.setEnabled(false);

        cbStudentList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Course 1" ,"Course 2" , "Course 3" , "Course 4" , "Course 5" , "Course 6" , "Course 7" }));
        cbStudentList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbStudentListItemStateChanged(evt);
            }
        });

        lbAddress1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbAddress1.setText("Select Student");

        lbDOB1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDOB1.setText("Fee Paid");

        tfFeePaid.setEnabled(false);

        lbDOB2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDOB2.setText("Balance");

        tfFeeBalance.setEnabled(false);

        javax.swing.GroupLayout pnlDataEnterLayout = new javax.swing.GroupLayout(pnlDataEnter);
        pnlDataEnter.setLayout(pnlDataEnterLayout);
        pnlDataEnterLayout.setHorizontalGroup(
            pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                                .addComponent(lbAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPhoneNumber)
                                    .addComponent(lbSTudentName)
                                    .addComponent(lbEmail))
                                .addGap(21, 21, 21)
                                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataEnterLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                        .addComponent(tfStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfAmountPaid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                            .addComponent(tfComments)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataEnterLayout.createSequentialGroup()
                                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbDOB)
                                    .addComponent(lbDOB1)
                                    .addComponent(lbDOB2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfFeeBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                    .addComponent(tfFeePaid)
                                    .addComponent(tfFeeApplicable)))))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAddNew)
                            .addComponent(btnCLear)))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btmbackADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        pnlDataEnterLayout.setVerticalGroup(
            pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataEnterLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btmbackADMIN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataEnterLayout.createSequentialGroup()
                        .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbAddress1)
                            .addComponent(cbStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(lbSTudentName))
                    .addComponent(tfStudentName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDOB)
                    .addComponent(tfFeeApplicable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFeePaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDOB1))
                .addGap(42, 42, 42)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDOB2)
                    .addComponent(tfFeeBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmail)
                    .addComponent(tfAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDataEnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addComponent(lbPhoneNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDataEnterLayout.createSequentialGroup()
                        .addComponent(tfComments, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(16, 16, 16)
                .addComponent(btnAddNew)
                .addGap(26, 26, 26)
                .addComponent(btnCLear)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDataEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDataEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        int selectedIndex = tblUser.getSelectedRow();
        selectedReceiptId= idsList.get(selectedIndex);
        System.out.println("selectedUserId= "+ selectedReceiptId);
          FeeReceipt rc= new FeeReceipt();
          rc.setId(selectedReceiptId);
          rc.setVisible(true);

        fetchStudentDetails();
        
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed

        try{
           Connection conn = ConnectionUtil.getInstance();
           PreparedStatement pst = conn.prepareStatement("Insert into collected_fees (student_id , amount_paid , comments , balance ) values ( ? ,?, ?, ?)");
    
           int amountPaid= Integer.parseInt(tfAmountPaid.getText());
           int totalPaid = selectedStudent.getFeePaid()+ amountPaid;
           int balance= selectedStudent.getFeeApplicable()- totalPaid;
           
           pst.setInt(1, selectedStudent.getId());       
           pst.setInt(2, amountPaid);
           pst.setString(3, this.tfComments.getText());
           pst.setInt(4, balance);
  
           int status = pst.executeUpdate();
           if(status>0)
           {
               PreparedStatement pst2 = conn.prepareStatement("update studentlist set fee_paid=? , fee_pending=? where id=?");
               pst2.setInt(1, totalPaid);
                pst2.setInt(2, balance);
                pst2.setInt(3, selectedStudent.getId());
                pst2.executeUpdate();
               fetchFeeList();
               fetchStudentsList();
               selectedReceiptId = -1;
           }
          
       } catch (SQLException ex) {
            Logger.getLogger(FeeCollection.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btmbackADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmbackADMINActionPerformed
        DashboardAccountant dashboardAccountant= new DashboardAccountant();
        dashboardAccountant.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btmbackADMINActionPerformed

    private void btnCLearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLearActionPerformed
        selectedReceiptId = -1;
        fetchFeeList();
        tfStudentName.setText("");
//        registerDate.setDate(null);
        tfAmountPaid.setText("");
        tfComments.setText("");
        tfFeeApplicable.setText("");
        tfFeePaid.setText("");
       tfFeeBalance.setText("");
    }//GEN-LAST:event_btnCLearActionPerformed

    private void cbStudentListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbStudentListItemStateChanged
        // TODO add your handling code here:
        
        selectedStudent = studentsList.get(cbStudentList.getSelectedIndex());
        setStudentDetails();
        
    }//GEN-LAST:event_cbStudentListItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeeCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeeCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeeCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeeCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FeeCollection().setVisible(true);
            }
        });
    }



    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btmbackADMIN;
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnCLear;
    private javax.swing.JComboBox<String> cbStudentList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAddress1;
    private javax.swing.JLabel lbDOB;
    private javax.swing.JLabel lbDOB1;
    private javax.swing.JLabel lbDOB2;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbPhoneNumber;
    private javax.swing.JLabel lbSTudentName;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlDataEnter;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField tfAmountPaid;
    private javax.swing.JTextField tfComments;
    private javax.swing.JTextField tfFeeApplicable;
    private javax.swing.JTextField tfFeeBalance;
    private javax.swing.JTextField tfFeePaid;
    private javax.swing.JTextField tfStudentName;
    // End of variables declaration//GEN-END:variables

    private void fetchFeeList() {
        idsList.clear();
         try {
            // register the driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            //create connection
            Connection conn = ConnectionUtil.getInstance();

            if (conn == null) {
                System.out.println("Connection error");
            } else {
                System.out.println("Connection established");
            }
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from collected_fees");

            tblUser.setModel(DbUtils.resultSetToTableModel(rs));
            
                        ResultSet rs2 = st.executeQuery("select * from collected_fees");
                                    while(rs2.next())
            {
               idsList.add(rs2.getInt("id"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FeeCollection.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FeeCollection.class.getName()).log(Level.SEVERE, null, ex);
}

}

    private void fetchStudentDetails() {
         try {
            
                        // creating a connection
                        Connection conn= ConnectionUtil.getInstance();
                        if(conn==null)
                        {
                                System.out.println("Connection error");
                            }
                        else{
                                System.out.println("Connection established");
                            }
            
                        PreparedStatement pst = conn.prepareStatement("Select * from collected_fees where id = ?");
                        pst.setInt(1, selectedReceiptId);
                        ResultSet rs = pst.executeQuery();
                        if(rs.next()){
                            
                                  
                            
//                                  tfStudentName.setText(rs.getString("name"));
//                                  tfFeeApplicable.setText(rs.getString("DOB"));
//                                  tfAmountPaid.setText(rs.getString("email"));
//                                  tfComments.setText(rs.getString("comments"));
//                                  tfAdhaarNo.setText(rs.getString("adhaar"));
//                                  tfAddress.setText(rs.getString("address"));
//                                  cbStudentList.setEnabled(false);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(FeeCollection.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }

 private void fetchStudentsList() {
        studentsList.clear();
         try {
      
      
            //create connection
            Connection conn = ConnectionUtil.getInstance();

            if (conn == null) {
                System.out.println("Connection error");
            } else {
                System.out.println("Connection established");
            }
            Statement st = conn.createStatement();
//            ResultSet rs = st.executeQuery("select * from course");

   
            
                        ResultSet rs2 = st.executeQuery("select * from studentlist");
                                    while(rs2.next())
            {
               StudentModel student= new StudentModel(rs2.getInt("id"),rs2.getString("name"),rs2.getInt("fee_applicable"),rs2.getInt("fee_paid"),rs2.getInt("fee_pending"));
               studentsList.add(student);
            }
            String [] arr = new String[studentsList.size()];
            int i=0;
             for (StudentModel c : studentsList) {
                 arr[i] = c.getId()+"-"+c.getName();
                 i++;
             }
            cbStudentList.setModel(new DefaultComboBoxModel<>(arr));
            selectedStudent = studentsList.get(0);
            setStudentDetails();
        } catch (SQLException ex) {
            Logger.getLogger(FeeCollection.class.getName()).log(Level.SEVERE, null, ex);
}

}

    private void setStudentDetails() {
       if(selectedStudent!=null)
       {
           tfStudentName.setText(selectedStudent.getName());
                 tfFeeApplicable.setText(selectedStudent.getFeeApplicable()+"");      
                 tfFeePaid.setText(selectedStudent.getFeePaid()+"");   
                 tfFeeBalance.setText(selectedStudent.getFeePending()+"");
                 
       }
        
    }

}
